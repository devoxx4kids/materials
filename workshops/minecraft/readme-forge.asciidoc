= Minecraft Modding using Forge
:toc:
:toc-placement!:

This workshop shows how to get started with Minecraft Modding using Forge.

toc::[]

[[Requirements]]
== Requirements

* A Mac or Windows computer
* A Minecraft account is not required

[[Download]]
== Download and Install

==== Download

Download the following software

. **JDK:** Download and install JDK from https://www.oracle.com/java/technologies/downloads/
. **Eclipse:** Download Eclipse from http://www.eclipse.org/downloads/eclipse-packages/, pick "`Eclipse IDE for Java Developers`" and unzip.
. **Forge:** Download Forge 1.19 from
  https://maven.minecraftforge.net/net/minecraftforge/forge/1.19-41.1.0/forge-1.19-41.1.0-mdk.zip

=== Mac or Windows

Follow the instructions for Mac or Windows as explained below.

==== Mac

Make sure all the software lised in <<Download>> is downloaded.

. In Finder, go to Applications, Utilities, double click on Terminal
. Change directory to Desktop as `cd Desktop`
. Make a new directory by giving the command `mkdir forge`
. Change to the directory `cd forge`
. Unzip the downloaded Forge 1.19 zip file as `unzip ~/Downloads/forge-1.19-41.1.0-mdk.zip`
. Give the command `./gradlew genEclipseRuns`. The output should show `BUILD SUCCESSFUL`.

==== Windows

Make sure all the software lised in <<Download>> is downloaded.

. Open a Command Prompt as explained at http://windows.microsoft.com/en-us/windows-vista/open-a-command-prompt-window
. Change directory to Desktop as `cd Desktop`
. Make a new directory by giving the command `mkdir forge`
. Change to the directory `cd forge`
. In File Explorer, double click on the Forge 1.19 zip file downloaded earlier and extract all the contents in the `forge` directory.
. At Command Prompt, give the command `gradlew genEclipseRuns`. The output should show `BUILD SUCCESSFUL`.

=== Verify

This is a very important step as this will confirm that you can actually start modding.

. Open up Eclipse
. In the "`Eclipse IDE Launcher`" window, click on `Launch`.
. In the Eclipse window, chose menu `File`, `Import...`, select `Gradle`, `Existing Gradle Project`, click `Next >` button two times, choose the location of `forge` directory, and click on `Finish`.
. The Eclipse window should look like as shown:
+
image::images/eclipse-forge-install.png[]
. Double click on `forge` folder in `Package Explorer` on the left side. This is where all the source code exists and we'll modify it later. Double click on `forge` folder in `Gradle Task` on the right side, double click on `forgegradle runs`, and select `runClient`.
+
image::images/forge-eclipse-expanded-view.png[]
. Double click on `runClient` to start the Minecraft launcher. It looks like as shown:
+
image::images/forge-minecraft-first-run.png[]

Let's start modding!

[[Chat_Items]]
== Chat Items

**Purpose:** This mod wil add items to player's inventory?? when a certain word or phrase is spelled in a chat message.

**Instructions:** Create a new Java class called `ChatItems`. To do this, expand the folder `src/main/java`, right click on the package `com.example.examplemod` and select `New` > `Class`, fill the name property with `ChatItems` and click on the `Finish` Button. Replace its code with <<Chat_Items_Code>>. 

[[Chat_Items_Code]]
.Chat Items code
====
[source, java]
----
package com.example.examplemod;

import net.minecraft.world.item.ItemStack;
import net.minecraft.world.item.Items;
import net.minecraftforge.event.ServerChatEvent;
import net.minecraftforge.eventbus.api.SubscribeEvent;
import net.minecraftforge.fml.common.Mod;

@Mod.EventBusSubscriber(modid = ExampleMod.MODID)
public class ChatItems {
    @SubscribeEvent
    public static void giveItems(ServerChatEvent event) {
        if (event.getMessage().contains("potato")) {
            event.getPlayer().getInventory().add(new ItemStack(Items.POTATO, 64));
        }
    }
}
----
====

Once you've finished editing the files, click the green play button on the Eclipse menu bar to build and run your modded Minecraft. Eclipse will ask you to save the file. Go ahead and click on the `Save` button. This will start the Minecraft launcher.

image::images/forge-eclipse-play-button.png[]


**Gameplay:**

. Create a new `Creative` world
. Press `T` to open up the chat window
. Type in any message that contains the word `potato`
. You should receive one stack (one stack = 64 items) of potatoes

=== Change text/item

This mod will produce a different item for a different text message. For example change the text to `diamond` and the item produced to `Diamond`. Use `Ctrl`+`Space` to show the list of items.

Close Minecraft game window and restart it by clicking on the play button on the Eclipse menu bar.

=== Different Items

This mod variation produces different items for different chat text. For example, `potato` chat text will yield a potato in the inventory?? and `diamond` chat text will yield a diamond in the inventory.

[[Different_Chat_Items_Code]]
.Different Chat Items code
====
[source, java]
----
@SubscribeEvent
public static void giveItems(ServerChatEvent event){
	if (event.getMessage().contains("potato")) {
		event.getPlayer().getInventory().add(new ItemStack(Items.POTATO, 64));
	}

	if (event.getMessage().contains("diamond")) {
		event.getPlayer().getInventory().add(new ItemStack(Items.DIAMOND, 64));
	}
}
----
====

=== Multiple Items

This mod will produce multiple items for a chat text. Instead of only producing potato and diamond one at one time, it can product potato and diamond, both at the same time, on a same text.

[[Multiple_Chat_Items_Code]]
.Multiple Chat Items code
====
[source, java]
----
@SubscribeEvent
public void giveItems(ServerChatEvent event){
	if (event.getMessage().contains("potato")) {
		event.getPlayer().inventory.addItemStackToInventory(new ItemStack(Items.POTATO, 64));
		event.getPlayer().inventory.addItemStackToInventory(new ItemStack(Items.DIAMOND, 64));
	}
}
----
====

[[Dragon_Spawner]]
== Ender Dragon Spawner

**Purpose:** This mod will spawn an Ender Dragon every time a player places a Dragon Egg block.

**Instructions:** In the package `com.example.examplemod`, make a new class called `DragonSpawner` and replace its code with the code shown in <<Dragon_Spawner_Code>>.

[[Dragon_Spawner_Code]]
.Dragon Spawner code
====
[source, java]
----
package com.example.examplemod;

import net.minecraft.world.entity.EntityType;
import net.minecraft.world.entity.boss.enderdragon.EnderDragon;
import net.minecraft.world.entity.boss.enderdragon.phases.EnderDragonPhase;
import net.minecraft.world.level.block.Blocks;
import net.minecraftforge.event.level.BlockEvent;
import net.minecraftforge.eventbus.api.SubscribeEvent;
import net.minecraftforge.fml.common.Mod;

@Mod.EventBusSubscriber(modid = ExampleMod.MODID)
public class DragonSpawner {
    @SubscribeEvent
    public static void spawnDragon(BlockEvent.EntityPlaceEvent event) {
        if (event.getPlacedBlock().getBlock() == Blocks.DRAGON_EGG) {
            event.getLevel().removeBlock(event.getPos(), false); // false = no flags
            EnderDragon dragon = EntityType.ENDER_DRAGON.create(event.getEntity().getLevel());
            dragon.moveTo(event.getPos(), 0, 0);
            dragon.getPhaseManager().setPhase(EnderDragonPhase.TAKEOFF);
            event.getLevel().addFreshEntity(dragon);
        }
    }
}
----
====

**Gameplay:**

. Use the command `/give Dev minecraft:dragon_egg` to give yourself a dragon egg
. Select slot from the inventory?? in which the dragon egg is placed
. Double click in the world to place down the dragon egg, and this will spawn an Ender Dragon

NOTE: You may get the error `You don't have permissions to perform the command`. The reason it says that you don't have permission to run the command is because you don't have cheats enabled in your world. When you are creating a world, there will be a box that says you are in `Survival` mode. Click on the box until it says "`Creative`" mode, which will automatically enable cheats. Then, create the rest of the world normally. You will need to create a new world for this.

=== Change block/entity

This mod will change the block that triggers spawning and spawn a different item. For example change the block to `sponge` and entity to `EntitySquid`. Use Ctrl+Space to show the list of items.

.Spawn squid
====
[source, java]
----
@SubscribeEvent
public static void spawnSquid(BlockEvent.EntityPlaceEvent event) {
    if (event.getPlacedBlock() == Blocks.SPONGE.defaultBlockState()) {
         event.getLevel().removeBlock(event.getPos(), false); // false = no flags
         Squid squid = EntityType.SQUID.create(event.getEntity().level);
         squid.moveTo(event.getPos(), 0, 0);
         event.getLevel().addFreshEntity(squid);
     }
}
----
====

After doing this, press `Cmd` + `Shift` + `O` on a Mac computer or `Control` + `Shift` + `O` on a Windows computer to import one class and fix the error. In the minecraft game window, give yourself a sponge using the command  `/give Dev minecraft:sponge`. Select slot from the inventory?? in which the sponge is placed, double click in the world to place down the sponge, and this will spawn a Squid.

Run the minecraft game and enjoy the new mod.

=== Change offset of entities

This mod will spawn ender dragon 2 blocks above the location where the dragon egg is placed.

Change one line in the `spawnDragon` method to the one below:

.Spawn offset
====
[source, java]
----
dragon.moveTo(event.getPos().above(2), 0, 0);
----
====

Run the minecraft game and enjoy the new mod.

[[Creeper_Alert]]
== Creeper Spawn Alert

**Purpose:** This mod will alert all players when a creeper spawns.

**Instructions:** Make a new Java class called `CreeperSpawnAlert`. Replace its contents with <<Creeper_Spawn_Code>>.

[[Creeper_Spawn_Code]]
.Creeper Spawn Alert code
====
[source, java]
----
package com.example.examplemod;

import net.minecraft.ChatFormatting;
import net.minecraft.network.chat.Component;
import net.minecraft.world.entity.monster.Creeper;
import net.minecraft.world.entity.player.Player;
import net.minecraftforge.event.entity.EntityJoinLevelEvent;
import net.minecraftforge.eventbus.api.SubscribeEvent;
import net.minecraftforge.fml.common.Mod;

@Mod.EventBusSubscriber(modid = ExampleMod.MODID)
public class CreeperSpawnAlert {
    @SubscribeEvent
    public static void sendAlert(EntityJoinLevelEvent event) {
        if (event.getEntity() instanceof Creeper && event.getLevel().isClientSide) {
            for (Player player : event.getLevel().players()) {
                player.sendSystemMessage(Component.literal(ChatFormatting.GREEN + "A creeper has spawned!"));
            }
        }
    }
}
----
====

**Gameplay:**

. Make sure you are not on peaceful mode.
. Set the time to night time `/time set night` 

You should get a bunch of messages saying "`A creeper has spawned!`" in green color. One of these messages is sent to you every time a creeper spawns.

=== Change color/format of message

==== Change color to red

This mod will change color of the message.

.Color of message
====
[source,java]
----
player.sendSystemMessage(Component.literal(ChatFormatting.RED + "A creeper has spawned!"));
----
====

Try different colors by code completion after `ChatFormatting`.

=== Change text of message

This mod will change the message printed.

.Style of message
====
[source,java]
----
player.sendSystemMessage(Component.literal(ChatFormatting.RED + "Run away, a creeper has spawned!"));
----
====

Talk about text within quotes.

=== Print a different message for another mob

This mod will print a different message for another mob.

.Different message for another mob
====
[source, java]
----
if (event.getEntity() instanceof Zombie && event.getLevel().isClientSide) {
    for (Player player : event.getLevel().players()) {
	player.sendSystemMessage(Component.literal(ChatFormatting.GREEN + "A zombie has spawned!"));
    }
}
----
====


[[Sharp_Snowballs]]
== Sharp Snowballs

**Purpose:** This mod turn all snowballs into arrows so that they can hurt entities.

**Instructions:** Create a new Java class called `SharpSnowballs`. Replace its code with <<Snowballs_Code>>.

[[Snowballs_Code]]
.Sharp Snowballs code
====
[source, java]
----
package com.example.examplemod;

import net.minecraft.world.entity.Entity;
import net.minecraft.world.entity.EntityType;
import net.minecraft.world.entity.projectile.Arrow;
import net.minecraft.world.entity.projectile.Snowball;
import net.minecraft.world.level.Level;
import net.minecraftforge.event.entity.EntityJoinLevelEvent;
import net.minecraftforge.eventbus.api.SubscribeEvent;
import net.minecraftforge.fml.common.Mod;

@Mod.EventBusSubscriber(modid = MainMod.MODID)
public class SharpSnowballs {
    @SubscribeEvent
    public static void replaceSnowballWithArrow(EntityJoinLevelEvent event) {
        Entity snowball = event.getEntity();
        Level level = event.getLevel();

        if (!(snowball instanceof Snowball)) {
            return;
        }

        if (!level.isClientSide) {
            Arrow arrow = EntityType.ARROW.create(level);
            arrow.moveTo(snowball.position());
            arrow.setDeltaMovement(snowball.getDeltaMovement());
            level.addFreshEntity(arrow);
        }

        event.setCanceled(true);
    }
}
----
====

**Gameplay:**

. Press `E` to bring inventory window, click on the top-right panel to search items, type `snowball`, drag snowball to the hotbar in inventory window
. Select the snowball in hotbar, right click to throw it
. It should turn into an arrow

You can also spawn Snow Golems by placing a pumpkin on top of a tower of two Snow blocks. The Snow Golem will act as a turret, shooting out snowballs at hostile mobs that turn into arrows.

Tip: Spawn a Zombie or two for the Snow Golems to shoot.

=== Explosive snowballs

This mod will convert snowballs into TNT.

Replace `Arrow arrow = EntityType.ARROW.create(level);` line with the code shown in <<Explosive_Snowballs_Code>>.

[[Explosive_Snowballs_Code]]
.Explosive Snowballs code
====
[source, java]
----
PrimedTnt tnt = EntityType.TNT.create(level);
tnt.setFuse(80);
----
====

Make sure to fix the imports using `Cmd` + `Shift` + `0` on Mac and `Ctrl` + `Shift` + `O` on Windows.

[[OP_Golems]]
== Overpowered Iron Golems

**Purpose:** This mod will add helpful potion effects to Iron Golems when they are spawned in the world.

**Instructions:**

Create a new Java class called `OverpoweredIronGolems` and replace its contents with <<Iron_Golems_Code>>.

[[Iron_Golems_Code]]
.Overpowered Iron Golems code
====
[source, java]
----
package com.example.examplemod;

import net.minecraft.world.effect.MobEffectInstance;
import net.minecraft.world.effect.MobEffects;
import net.minecraft.world.entity.animal.IronGolem;
import net.minecraftforge.event.entity.EntityJoinLevelEvent;
import net.minecraftforge.eventbus.api.SubscribeEvent;
import net.minecraftforge.fml.common.Mod;

@Mod.EventBusSubscriber(modid = ExampleMod.MODID)
public class OverpoweredIronGolems {
    @SubscribeEvent
    public static void applyPotionEffectsToGolem(EntityJoinLevelEvent event) {
        if (!(event.getEntity() instanceof IronGolem)) {
            return;
        }

        IronGolem golem = (IronGolem) event.getEntity();
        golem.addEffect(new MobEffectInstance(MobEffects.MOVEMENT_SPEED, 1000000, 5));
        golem.addEffect(new MobEffectInstance(MobEffects.DAMAGE_BOOST, 1000000, 5));
        golem.addEffect(new MobEffectInstance(MobEffects.REGENERATION, 1000000, 5));
        golem.addEffect(new MobEffectInstance(MobEffects.FIRE_RESISTANCE, 1000000, 5));
    }
}
----
====

**Gameplay:**

. Spawn an Iron Golem by using the command `/summon minecraft:iron_golem`.
. Spawn some hostile mobs near the Iron Golem

The golem should move towards them to kill them. Normally, Iron Golems move slowly, but with the speed effect from the mod, they should move very fast.

[[Rain_Water]]
== Rain Water

**Purpose:** Normally, there is no water on the ground when it rains. This mod places water at the feet of entities when it is raining.

**Instructions:** Create a new Java class called `RainWater` and replace its contents with <<Rain_Code>>.

[[Rain_Code]]
.Rain Water code
====
[source, java]
----
package org.devoxx4kids.forge.mods;

import net.minecraft.entity.Entity;
import net.minecraft.init.Blocks;
import net.minecraft.util.math.BlockPos;
import net.minecraft.world.World;
import net.minecraftforge.event.entity.living.LivingEvent.LivingUpdateEvent;
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;

public class RainWater {

	@SubscribeEvent
	public void makeWater(LivingUpdateEvent event) {
		Entity entity = event.getEntity();
		World world = entity.world;
		int x = (int) Math.floor(entity.posX);
		int y = (int) Math.floor(entity.posY);
		int z = (int) Math.floor(entity.posZ);
	
		if (!world.isRaining()) {
			return;
		}
	
		for (int i = y; i < 256; i++) {
			if (world.getBlockState(new BlockPos(x, i, z)) != Blocks.AIR.getBlockState().getBaseState()) {
				return;
			}
		}
	
		if (world.isRemote || !world.getBlockState(new BlockPos(x, y - 1, z)).isFullCube()) {
			return;
		}
	
		world.setBlockState(new BlockPos(x, y, z), Blocks.WATER.getBlockState().getBaseState());
	}
}
----
====

**Gameplay:**

. Use the command `/weather rain` to start rain
. Start moving, and water should be placed wherever you or any other entity go, but it will disappear quickly

=== TNT Thunder

**Purpose**: Spawn a TNT with fuse at a random duration wherever an entity is walking

**Instructions**: Replace the `makeWater` method in `RainWater` class with the code in <<TNT_Thunder>>

[[TNT_Thunder]]
.TNT Thunder Code
====
[source, java]
----
 @SubscribeEvent
 public static void spawnTnt(LivingEvent.LivingTickEvent event) {
     Entity entity = event.getEntity();
     Level level = entity.level;
     BlockPos entityPos = entity.blockPosition();

     if (level.isClientSide) {
         return;
     }

     if (!level.isThundering() || level.getBiome(entityPos).get().getPrecipitation() != Biome.Precipitation.RAIN) {
         return;
     }

     for (int i = entityPos.getY(); i < 320; i++) {
         if (level.getBlockState(entityPos.atY(i)).getBlock() != Blocks.AIR) {
             return;
         }
     }

     BlockPos posBelow = entityPos.below(1);
     if (!level.getBlockState(posBelow).isCollisionShapeFullBlock(level, posBelow)) {
         return;
     }

     if (level.random.nextInt(40) != 1) {
         return;
     }

     PrimedTnt tnt = EntityType.TNT.create(level);
     tnt.setFuse(80);
     tnt.moveTo(entityPos, 0, 0);
     level.addFreshEntity(tnt);
 }
----
====

Fix the imports.

**Gameplay:**

. Use the command `/weather thunder` to make the weather stormy
. Watch for TNT to be placed wherever you walk around. The TNT will blow up after 1-4 seconds.

[[Skeleton_War]]
== Skeleton War

**Purpose:** This mod gives armon to all skeletons and make them try to kill each other.

**Instructions:** Create a new Java class called `SkeletonWar` and replace its contents with <<War_Code>>.

[[War_Code]]
.Skeleton War code
====
[source, java]
----
package com.example.examplemod;

import net.minecraft.util.RandomSource;
import net.minecraft.world.entity.EquipmentSlot;
import net.minecraft.world.entity.ai.goal.target.NearestAttackableTargetGoal;
import net.minecraft.world.entity.monster.AbstractSkeleton;
import net.minecraft.world.item.Item;
import net.minecraft.world.item.ItemStack;
import net.minecraft.world.item.Items;
import net.minecraftforge.event.entity.EntityJoinLevelEvent;
import net.minecraftforge.eventbus.api.SubscribeEvent;
import net.minecraftforge.fml.common.Mod;

import java.util.Arrays;
import java.util.List;

@Mod.EventBusSubscriber(modid = ExampleMod.MODID)
public class SkeletonWar {
    static List<Item> helmets = Arrays.asList(Items.LEATHER_HELMET,
            Items.CHAINMAIL_HELMET, Items.GOLDEN_HELMET, Items.IRON_HELMET,
            Items.DIAMOND_HELMET, Items.NETHERITE_HELMET, Items.TURTLE_HELMET);
    static List<Item> chestplates = Arrays.asList(Items.LEATHER_CHESTPLATE,
            Items.CHAINMAIL_CHESTPLATE, Items.GOLDEN_CHESTPLATE, Items.IRON_CHESTPLATE,
            Items.DIAMOND_CHESTPLATE, Items.NETHERITE_CHESTPLATE);
    static List<Item> leggings = Arrays.asList(Items.LEATHER_LEGGINGS,
            Items.CHAINMAIL_LEGGINGS, Items.GOLDEN_LEGGINGS, Items.IRON_LEGGINGS,
            Items.DIAMOND_LEGGINGS, Items.NETHERITE_LEGGINGS);
    static List<Item> boots = Arrays.asList(Items.LEATHER_BOOTS,
            Items.CHAINMAIL_BOOTS, Items.GOLDEN_BOOTS, Items.IRON_BOOTS,
            Items.DIAMOND_BOOTS, Items.NETHERITE_BOOTS);

    @SubscribeEvent
    public static void makeWarNotPeace(EntityJoinLevelEvent event) {
        if (!(event.getEntity() instanceof AbstractSkeleton skeleton)) {
            return;
        }

        skeleton.targetSelector.addGoal(3, new NearestAttackableTargetGoal<>(skeleton, AbstractSkeleton.class, true));

        RandomSource random = skeleton.level.random;
        skeleton.setItemSlot(EquipmentSlot.HEAD, new ItemStack(helmets.get(random.nextInt(6))));
        skeleton.setItemSlot(EquipmentSlot.CHEST, new ItemStack(chestplates.get(random.nextInt(5))));
        skeleton.setItemSlot(EquipmentSlot.LEGS, new ItemStack(leggings.get(random.nextInt(5))));
        skeleton.setItemSlot(EquipmentSlot.FEET, new ItemStack(boots.get(random.nextInt(5))));
    }

    // variations can include:
    // - changing the items in the lists (e.g. adding pumpkins to helmets list)
    // - changing target mob
    // - changing priority of goal (player is priority 2, iron golems and turtles are priority 3)
}
----
====

**Gameplay:**

. Press `E` to bring inventory window, click on the top-right panel to search items, type `skeleton spawn`, drag the first egg from inventory to the hotbar in inventory window
. Select the skeleton spawn egg in hotbar and right click on the ground multiple times to spawn skeletons
. The skeletons will have assorted pieces of armor; they will also be shooting at each other

Another variation is where you can create an enclosed arena, spwan a bunch of skeletons there and wage a skeleton war.

[[Wall_Climber]]
== Wall Climber (NOT WORKING)

**Purpose:** To allow players to climb up straight walls without any blocks or other help.

**Instructions:** In your package, create a new class called `WallClimber` and replace its contents with <<Climb_Code>>.

[[Climb_Code]]
.Wall Climber code
====
[source, java]
----
package org.devoxx4kids.forge.mods;

import net.minecraft.entity.player.EntityPlayer;
import net.minecraftforge.event.entity.living.LivingFallEvent;
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;
import net.minecraftforge.fml.common.gameevent.TickEvent.PlayerTickEvent;

public class WallClimber {

	@SubscribeEvent
	public void climbWall(PlayerTickEvent event) {

		EntityPlayer player = event.player;

		if (!player.isCollidedHorizontally) {
			return;
		}

		if (player.isActiveItemStackBlocking()) {
			player.motionY = -0.5;
		} else if (player.isSneaking()) {
			player.motionY = 0;
		} else {
			player.motionY = 0.5;
		}

	}

	@SubscribeEvent
	public void negateFallDamage(LivingFallEvent event) {
		if (!(event.getEntity() instanceof EntityPlayer)) {
			return;
		}

		event.setCanceled(true);
	}
}
----
====

Then, register it using the line shown in <<Climber_Registering>>.

[[Climber_Registering]]
.Wall Climber registering
====
[source, java]
----
FMLCommonHandler.instance().bus().register(new WallClimber());
MinecraftForge.EVENT_BUS.register(new WallClimber());
----
====

You'll find that Eclipse flags a missing import for FMLCommonHandler so make sure to add it as we did earlier. 

**Gameplay:**

. Build a wall straight up with any solid block you want
. Run into that wall and you should start going up
. Block with a sword to go down instead of up
. Hold Shift to stop moving up or down

[[Shotgun]]
== Arrow Shotgun (NOT WORKING)

**Purpose:** To make all bows fire 20 flaming arrows instead of one arrow.

**Instructions:** In your package, create a new class called `ArrowShotgun` and replace its contents with <<Arrow_Code>>.

[[Arrow_Code]]
.Arrow Shotgun code
====
[source, java]
----
package org.devoxx4kids.forge.mods;

import java.util.Random;

import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.entity.projectile.EntityArrow;
import net.minecraft.entity.projectile.EntityTippedArrow;
import net.minecraft.item.ItemBow;
import net.minecraft.world.World;
import net.minecraftforge.event.entity.player.ArrowLooseEvent;
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;

public class ArrowShotgun {

	private final int arrows = 20;

	@SubscribeEvent
	public void shootArrows(ArrowLooseEvent event) {
		EntityPlayer player = event.getEntityPlayer();
		World world = event.getWorld();

		Random random = new Random();

		float velocity = 2.0F;

		for (int i = 0; i < arrows; i++) {
			EntityArrow arrow = new EntityTippedArrow(world, player);
			arrow.setLocationAndAngles(0.0F, ItemBow.getArrowVelocity(event.getCharge()) * 3.0F, 12.0F, player.rotationYaw, player.rotationPitch);
			arrow.pickupStatus = EntityArrow.PickupStatus.DISALLOWED;
			arrow.setFire(10000);
			if (!world.isRemote) {
				world.spawnEntity(arrow);
			}
		}

		event.setCanceled(true);
	}
}
----
====

Then, register it using the line shown in <<Arrow_Registering>>.

[[Arrow_Registering]]
.Arrow Shotgun registering
====
[source, java]
----
MinecraftForge.EVENT_BUS.register(new ArrowShotgun());
----
====

**Gameplay:**

. Get a Bow item from your inventory
. Hold right click to charge it
. Release right click when the bow begins shaking
. 20 flaming arrows should be fired out


[[Fast_Bows]]
== Fast Bows (NOT WORKING)

**Purpose:** To add an enchantment which reduces the time needed to nock an arrow on a bow and pull it back all the way.

**Instructions:** In your package, create a new class called `EnchantmentArrowFast` and replace its contents with <<Fast_Arrow_Code>>. The name `EnchantmentArrowFast` is modeled after other bow enchantments' names in the code. For example, the enchantment Flame, which sets arrows on fire after they are launched, is called `EnchantmentArrowFire`.

[[Fast_Arrow_Code]]
.Fast Bows code
====
[source, java]
----
package org.devoxx4kids.forge.mods;

import net.minecraft.enchantment.Enchantment;
import net.minecraft.enchantment.EnchantmentHelper;
import net.minecraft.enchantment.EnumEnchantmentType;
import net.minecraft.init.Items;
import net.minecraft.inventory.EntityEquipmentSlot;
import net.minecraftforge.event.entity.living.LivingEntityUseItemEvent;
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;

public class EnchantmentArrowFast extends Enchantment {
	public EnchantmentArrowFast() {
		super(Enchantment.Rarity.UNCOMMON, EnumEnchantmentType.BOW,
				new EntityEquipmentSlot[] { EntityEquipmentSlot.MAINHAND,
						EntityEquipmentSlot.OFFHAND });
		this.setName("arrowFast");
	}

	/**
	 * Returns the minimal value of enchantability needed on the enchantment
	 * level passed.
	 */
	public int getMinEnchantability(int enchantmentLevel) {
		return 12 + (enchantmentLevel - 1) * 20;
	}

	/**
	 * Returns the maximum value of enchantability nedded on the enchantment
	 * level passed.
	 */
	public int getMaxEnchantability(int enchantmentLevel) {
		return this.getMinEnchantability(enchantmentLevel) + 25;
	}

	/**
	 * Returns the maximum level that the enchantment can have.
	 */
	public int getMaxLevel() {
		return 2;
	}

	@SubscribeEvent
	public void decreaseBowUseDuration(LivingEntityUseItemEvent.Tick event) {
		if (event.getItem() == null) {
			return;
		}

		if (event.getItem().getItem() != Items.BOW) {
			return;
		}

		int level = EnchantmentHelper.getEnchantmentLevel(MainMod.haste, event.getItem());

		switch (level) {
		case 1:
			event.setDuration(event.getDuration() - 1);
			break;
		case 2:
			event.setDuration(event.getDuration() - 2);
			break;
		default:
			break;
		}
	}
}
----
====

Then, you will need to add some extra lines of code besides just the registering line. Right after the line in your main file that says `public static final String VERSION = "1.0";`, add the line of code from <<Fast_Arrow_Constant>>

[[Fast_Arrow_Constant]]
.Fast Bows enchantment constant
====
[source, java]
----
public static final Enchantment haste = new EnchantmentArrowFast();
----
====

After that, put the code from <<Fast_Arrow_Registering>> in your `init()` method to register the mod.

[[Fast_Arrow_Registering]]
.Fast Bows registering
====
[source, java]
----
MinecraftForge.EVENT_BUS.register(haste);
Enchantment.REGISTRY.register(100, new ResourceLocation("arrowFast"), haste);
====

Don't forget to fix the imports using `Cmd` + `Shift` + `O` on `Mac` and `Ctrl` + `Shift` + `O` on Windows.

Lastly, you will have to make a new file to make sure the name of the enchantment shows up correctly ("`Haste`" instead of "`enchantment.arrowFast`"). There is a folder with the name "src/main/resources" directly underneath the "src/main/java" folder. Right click on that folder, and select New > Package. Name your new package `assets.mymods.lang`. Then, right click on your new package and select New > File. When you are asked for the name of the new file, enter the name `en_US.lang`. In the new file, add in the text shown in <<Fast_Bows_Lang_File>>.

[[Fast_Bows_Lang_File]]
.Fast Bows .lang file
====
[source, text]
----
enchantment.arrowFast=Haste
----
====

**Gameplay:**

. Get a Bow from your inventory
. Get an Enchanted Book that has the enchantment "Haste I" or "Haste II" on it from your inventory
. Use an anvil to combine the two items you got
. Get out another bow from your inventory, but don't enchant it
. Compare the shooting speeds of the two bows - the ones with Haste should be significantly faster than the one without any enchantmeents

[[Sharing]]
== Sharing Your Mods

=== Create your mod .jar file

. On Mac, open Terminal. On Window, open Command Prompt
. Go to forge folder using the command `cd ~/Desktop/forge`
. On Mac, type the command `./gradlew build`. On Windows, it will be `gradlew build`
. Your mods are available in `build/libs/modid-1.0.jar` 

=== Run a server and test the mods (NOT WORKING)

. Run server using `./gradlew runServer` command. During the first run, the server starts and immediately shuts down.
. On Mac, edit EULA using the command `sed 's/false/true/g' run/eula.txt > tmp; mv tmp run/eula.txt`. On Windows, edit `run/eula.txt` file using notepad, edit last line to replace word `false` with `true`, and save the file.
. Copy the generated mod file to the server mods directory using the command `cp build/libs/modid-1.0.jar run/mods`.
. Start server again using the command `./gradlew runServer`.

[[Book]]
== Minecraft Modding Book from O'Reilly

Are you interested in creating a new item, new block, new recipe, new textures, and lots of other fun mods? Then check out http://shop.oreilly.com/product/0636920036562.do[Minecraft Modding with Forge] from O'Reilly.

image::images/minecraft-modding-book-cover.png[link="http://shop.oreilly.com/product/0636920036562.do"]

[[Video_Tutorial]]
== Minecraft Modding Video Tutorial from O'Reilly

Are you interested in following these instructions and learning a bit of Java in the process as well? Then check out http://www.infiniteskills.com/training/minecraft-modding-with-forge.html?network=coverqr[Minecraft Modding with Forge Training Video] from O'Reilly or scan the QR code from your phone.

image::images/minecraft-modding-oreilly-video-course.jpg[link="http://www.infiniteskills.com/training/minecraft-modding-with-forge.html?network=coverqr"]

[[Tips]]
== Tips

* When changing an item or block, delete the current item/block and press `Ctrl + Space` to pull up a list of items and blocks that are availible.

